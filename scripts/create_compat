#!/bin/sh
#
# Generate a forward compatibility header for
# syscall numbers based on the target syscall_nr.h given
# as input.
#
# For instance:
# create_compat i386 >syscall_fwd_compat.h
#
# The idea is that syscall numbers for the target cpus in
# linux-user/$cpu are defined and thus we can reuse them for generating
# syscall numbers for the host even if the actual build host itself does not
# define them. Hence allowing forward compatibility for the host $cpu.
# Note though that it works only for hosts that are also targets in QEMU.
#
arch="${1?}"
cpu=`echo $arch | tr '[A-Z]' '[a-z]'`
header=linux-user/$cpu/syscall_nr.h
srcdir=`dirname $0`/..
echo "/*"
echo " * This file was automatically generated by `basename $0` script:"
echo " * `basename $0` $*"
echo " *"
echo " * Using input header: $header"
echo " */"
echo "#ifdef CONFIG_SYSCALL_FWD_COMPAT"
if [ -f "$srcdir/$header" ]; then
    sed 's!^#define[\t ]*TARGET_\([^\t ]*\)[\t ]*\([0-9]*\).*!#ifndef __\1\n#define __\1 \2\n#endif!' <$srcdir/$header
else
    echo '#error "forward compatibility not supported for this host architecture"'
fi
echo "#endif /* CONFIG_SYSCALL_FWD_COMPAT */"
